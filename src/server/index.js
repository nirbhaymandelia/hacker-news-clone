import express from 'express';
import compression from 'compression';
import helmet from 'helmet';
import morgan from 'morgan';
import responseTime from 'response-time';
import bodyParser from 'body-parser';
import path from 'path';
import requestHandler from './requestHandler';

const app = express();

app.setup = function setup() {
  // This is the stats file generated by webpack loadable plugin
  const statsFile = path.resolve('dist/client/loadable-stats.json');

  this.locals.statsFile = statsFile;
  this.locals.cachedData = { cacheCount: 0 };
  this.use(compression());
  this.use(helmet());
  this.use(bodyParser.json());

  // To be able to serve static files
  this.use('/assets', express.static('dist/client'));

  this.use(morgan('short'));

  this.use(
    responseTime((_req, res, time) => {
      res.setHeader('X-Response-Time', `${time.toFixed(2)}ms`);
      res.setHeader('Server-Timing', `renderServerSideapp;dur=${time}`);
    })
  );

  this.use('/robots.txt', (req, res) => {
    res.set('Content-Type', 'text/plain');
    res.send('User-agent: *\nDisallow:');
  });

  this.use(requestHandler);
};

export default app;
