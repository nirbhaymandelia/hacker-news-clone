import express from 'express';
import compression from 'compression';
import helmet from 'helmet';
import morgan from 'morgan';
import responseTime from 'response-time';
import bodyParser from 'body-parser';
import path from 'path';
import fs from 'fs';
import requestHandler from './requestHandler';

const app = express();

const loadJson = (filePath) => {
  try {
    const data = fs.readFileSync(filePath, 'utf-8');
    return JSON.parse(data);
  } catch (e) {
    console.log('Unable to read json file!!', filePath, e);
  }
  return undefined;
};

// This is the stats file generated by webpack loadable plugin
const stats = loadJson(path.resolve('dist/client/loadable-stats.json'));

app.locals.stats = stats;
app.locals.cachedData = { cacheCount: 0 };
app.use(compression());
app.use(helmet());
app.use(bodyParser.json());

// To be able to serve static files
app.use('/assets', express.static('dist/client'));

app.use(morgan('short'));

app.use(
  responseTime((_req, res, time) => {
    res.setHeader('X-Response-Time', `${time.toFixed(2)}ms`);
    res.setHeader('Server-Timing', `renderServerSideapp;dur=${time}`);
  })
);

app.use('/robots.txt', (req, res) => {
  res.set('Content-Type', 'text/plain');
  res.send('User-agent: *\nDisallow:');
});

app.use(requestHandler);

//
// Hot Module Replacement
// -----------------------------------------------------------------------------
if (module.hot) {
  app.hot = module.hot;
}

export default app;
